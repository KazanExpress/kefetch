{"version":3,"file":"kefetchup.umd.js","sources":["../src/default-fetch.ts","../src/generic-client.ts","../src/clients.ts"],"sourcesContent":["/**\n * Default fetch handler\n *\n * @export\n * @param {string} url\n * @param {RequestInit} [options]\n * @returns {Promise<Response>}\n */\nexport async function defaultFetch(url: string, options?: RequestInit): Promise<Response> {\n  return await new Response(\n    JSON.stringify(defaultFetchHandlerResponseBody(url, options)),\n    defaultFetchHandlerResponseOptions\n  );\n}\n\nexport const defaultFetchHandlerResponseBody = (url: string, options?: RequestInit) => ({\n  error: 'Default fetch handler response.',\n  to: url,\n  options\n});\n\nexport const defaultFetchHandlerResponseOptions = {\n  status: 418,\n  statusText: '`fetch` missing in `window`'\n};\n","import { defaultFetch } from './default-fetch';\n\nexport type APIClientHandlers = {\n  fetchHandler: (url: string, options?: RequestInit) => Promise<Response>\n  errorHandler: (error: Response) => Response | void\n  responseHandler: (response: Response) => Response\n}\n\ntype Optional<T> = { [key in keyof T]?: T[key] };\n/**\n * Generic API client with default request\n *\n * @export\n * @class GenericAPIClient\n */\nexport class GenericAPIClient {\n  public readonly handlers: APIClientHandlers;\n  constructor(\n    public readonly baseURL: string = '',\n    public readonly clientConfig?: RequestInit,\n    handlers?: Optional<APIClientHandlers>\n  ) {\n    const defaultHandlers: APIClientHandlers = {\n      fetchHandler: window.fetch || defaultFetch,\n      errorHandler(resp) {\n        throw new ResponseException(handleStatus(resp.status), resp.status, resp);\n      },\n      responseHandler: resp => resp\n    }\n    this.handlers = handlers ? { ...defaultHandlers, ...handlers } : defaultHandlers;\n  }\n\n  /**\n   * Request method for making requests (duh)\n   *\n   * @param {string} url Url to make request\n   * @param {RequestInit} [fetchConfig] Default fetch config\n   * @param {boolean} [overrideDefaultConfig] Should override client base fetch config or not\n   * @returns {(Promise<Response | any>)}\n   * @memberof GenericAPIClient\n   */\n  public async request(url: string, fetchConfig?: RequestInit, overrideDefaultConfig?: boolean): Promise<Response | any> {\n    if (!url.match(/^(\\w+:)?\\/\\//)) {\n      url = this.baseURL ? new URL(url, this.baseURL).href : url;\n    }\n    try {\n      let response = this.handlers.responseHandler(await this.handlers.fetchHandler(url, overrideDefaultConfig ? fetchConfig : { ...this.clientConfig, ...fetchConfig }));\n      if (!response.ok) {\n        return this.handlers.errorHandler(response) || response;\n      }\n      return response;\n    } catch (e) {\n      throw e;\n    }\n  }\n\n  /**\n   * Fast alias method for request\n   *\n   * @protected\n   * @param {string} method HTTP method (GET, PUT, POST, etc)\n   * @param {string} url Url to make request\n   * @param {RequestInit} [fetchConfig] Default fetch config\n   * @param {boolean} [overrideDefaultConfig] Should override client base fetch config or not\n   * @returns {(Promise<Response | any>)}\n   * @memberof GenericAPIClient\n   */\n  protected async alias(method: string, url: string, fetchConfig?: RequestInit, overrideDefaultConfig?: boolean): Promise<Response | any> {\n    fetchConfig = fetchConfig || {};\n    fetchConfig.method = method;\n    return await this.request(url, fetchConfig, overrideDefaultConfig);\n  }\n\n  public async get(url: string, fetchConfig?: RequestInit, overrideDefaultConfig?: boolean): Promise<Response | any> {\n    return await this.alias('get', url, fetchConfig, overrideDefaultConfig);\n  }\n\n  public async put(url: string, fetchConfig?: RequestInit, overrideDefaultConfig?: boolean): Promise<Response | any> {\n    return await this.alias('put', url, fetchConfig, overrideDefaultConfig);\n  }\n\n  public async post(url: string, fetchConfig?: RequestInit, overrideDefaultConfig?: boolean): Promise<Response | any> {\n    return await this.alias('post', url, fetchConfig, overrideDefaultConfig);\n  }\n\n  public async patch(url: string, fetchConfig?: RequestInit, overrideDefaultConfig?: boolean): Promise<Response | any> {\n    return await this.alias('patch', url, fetchConfig, overrideDefaultConfig);\n  }\n\n  public async delete(url: string, fetchConfig?: RequestInit, overrideDefaultConfig?: boolean): Promise<Response | any> {\n    return await this.alias('delete', url, fetchConfig, overrideDefaultConfig);\n  }\n}\n\nexport class ResponseException extends Error {\n  constructor(\n    message: string,\n    public status: ResponseErrors,\n    public data?: Response\n  ) {\n    super(message)/* istanbul ignore next: I DON'T KNOW WHY!!!!! */;\n    Object.setPrototypeOf(this, ResponseException.prototype);\n    this.name = 'ResponseExcpetion';\n  }\n\n  toString() {\n    return this.name + ': ' + this.message;\n  }\n}\n\n/**\n * Retrieve string from response status\n *\n * @export\n * @param {number} [status=-1] Response status (200, 404, 500, etc)\n * @returns {string}\n */\nexport function handleStatus(status: number = -1): string {\n  return ResponseErrors[status] || ResponseErrors[-1];\n}\n\nexport enum ResponseErrors {\n  BadRequest = 400,\n  Unauthorized = 401,\n  PaymentRequired = 402,\n  Forbidden = 403,\n  NotFound = 404,\n  MethodNotAllowed = 405,\n  NotAcceptable = 406,\n  ProxyAuthenticationRequired = 407,\n  RequestTimeout = 408,\n  Conflict = 409,\n  Gone = 410,\n  LengthRequired = 411,\n  InvalidMedia = 415,\n  'I\\'m a teapot' = 418,\n  Unprocessable = 422,\n  TooManyRequests = 429,\n  ServerError = 500,\n  NotImplemented = 501,\n  BadGateway = 502,\n  ServiceUnavailable = 503,\n  GatewayTimeout = 504,\n  UnknownError = -1\n}\n","import { GenericAPIClient } from './generic-client';\n\nexport * from './generic-client';\n\nexport class JsonAPIClient extends GenericAPIClient {\n  public async request(url: string, fetchConfig?: RequestInit, overrideDefaultConfig?: boolean): Promise<any> {\n    return await (await super.request(url, fetchConfig, overrideDefaultConfig)).json();\n  }\n}\n\nexport class TextAPIClient extends GenericAPIClient {\n  public async request(url: string, fetchConfig?: RequestInit, overrideDefaultConfig?: boolean): Promise<string> {\n    return await (await super.request(url, fetchConfig, overrideDefaultConfig)).text();\n  }\n}\n"],"names":["tslib_1.__extends","ResponseErrors"],"mappings":"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"}